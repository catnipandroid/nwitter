{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","components/Auth.js","components/Navigation.js","components/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","prev","onSubmit","event","preventDefault","uid","update","onChange","value","target","required","type","onClick","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","placeholder","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signWithEmailandPassword","console","log","message","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Navigation","to","displayName","Profile","refreshUser","newDisplayName","setNewDisplayName","updateProfile","signOut","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","getFullYear","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e9500199.chunk.js","sourcesContent":["// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport firebase from 'firebase/app'\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { dbService, storageService } from 'fbase';\nimport { useState } from 'react';\n\nconst Nweet = ( {nweetObj, isOwner} ) => {\n    \n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    \n    \n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"정말 삭제 하시겠습니까?\");\n        if(ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            if(nweetObj.attachmentUrl=\"\") {\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n            }\n        }\n    } \n    \n    const toggleEditing = () => {\n        setEditing(prev => !prev);\n    }\n    \n    const onChange = (event) => {\n        const {\n            target: { value }\n        } = event;\n        setNewNweet(value);\n    }\n    \n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.uid}`).update({text:newNweet});\n        setEditing(false);\n    }\n        \n    return (\n        <div>\n            { editing ? (\n                <>\n                <form onSubmit={onSubmit}>\n                    <input onChange={onChange} value={newNweet} required />\n                    <input type=\"submit\" value=\"Update Nweet\" />\n                </form>\n                <button onClick={toggleEditing}>Cancel</button>\n                </>\n            ) : (\n                <>      \n                <h4>{nweetObj.text}</h4>\n                {nweetObj.attachmentUrl && (\n                    <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n                )}\n                {isOwner && (\n                    <>\n                        <button onClick={onDeleteClick}>Delete Nweet</button>\n                        <button onClick={toggleEditing}>Edit Nweet</button>                \n                    </>\n                )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Nweet;","import { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { v4 as uuidv4} from \"uuid\";\n\nconst NweetFactory = ({userObj}) => {\n\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState('');\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if(attachment !== \"\" ) {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        \n                    await dbService.collection(\"nweets\").add({\n                        text: nweet,\n                        createdAt: Date.now(),\n                        creatorId: userObj.uid,\n                        attachmentUrl\n                    });\n                    setNweet(\" \");\n                    setAttachment(\" \");\n    }\n    \n    const onChange = (event) => {\n        event.preventDefault();\n        const {\n            target: {value},\n        } = event;\n        setNweet(value);\n    }\n    \n    const onFileChange = (event) => {\n        const {\n            target:{files},\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: {\n                    result\n                }\n            } = finishedEvent;\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile)\n    }\n    \n    const onClearAttachment = () => {\n        setAttachment('');\n    }\n    \n    return (\n    <form onSubmit={onSubmit}>\n        <input \n            value={nweet}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"What's on your mind?\"\n            maxLength={120}\n        />\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\n        <input type=\"submit\" value=\"Nweet\" />\n        {attachment && (\n            <div>\n                <img src={attachment} width=\"50px\" height= '50px'/>\n                <button onClick={onClearAttachment}>Clear</button>\n            </div>            \n        )\n        }\n    </form>\n    );\n}\n\nexport default NweetFactory;","import { dbService } from 'fbase';\nimport { useEffect, useState } from 'react';\nimport Nweet from 'components/Nweet';\nimport NweetFactory from 'components/NweetFactory';\n\nconst Home = ( {userObj} ) => {\n    \n    const [nweets, setNweets] = useState([]);\n\n    useEffect( () => {\n        dbService.collection(\"nweets\").onSnapshot( (snapshot) => {\n            const newArray = snapshot.docs.map( (document) => ({\n                id: document.id,\n                ...document.data()\n            }));        \n            setNweets(newArray);\n        });\n    }, []);\n    \n    return (\n        <>\n            <NweetFactory userObj={userObj}/>\n            <div>\n                {nweets.map( (nweet) => (\n                    <Nweet key={nweet.id} \n                          nweetObj={nweet} \n                          isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n                \n            </div>\n        </>\n    )\n}\nexport default Home;","import { authService } from 'fbase';\nimport { useState } from 'react';\n\nconst AuthForm = () => {\n    \n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState('');\n    \n    \n    const onChange = (event) => {\n        const {\n            target: {name,value}\n        } = event;\n        if(name === 'email') {\n            setEmail(value);\n        } else if( name === \"password\") {\n            setPassword(value);\n        }\n    }\n    \n    const onSubmit = async (event) => {\n        event.preventDefault();\n        \n        try {\n            let data;\n            if(newAccount) {\n                // create new account\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                // log in\n                data = await authService.signWithEmailandPassword(email, password);\n            }   \n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    }\n    \n    const toggleAccount = () => {\n        setNewAccount((prev) => !prev);\n    }\n    \n    return (\n        <>\n            <div>\n                <form onSubmit={onSubmit}>\n                    <input name=\"email\" type=\"email\" placeholder=\"Email\" value={email} onChange={onChange} required />\n                    <input name=\"password\" type=\"password\" placeholder=\"Password\" value={password} onChange={onChange} required />\n                    <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}/>\n                    {error}\n                </form>\n                <span onClick={toggleAccount}>\n                    {newAccount ? \"Sign In\" : \"Create Account\"}\n                </span>\n            </div>\n        </>\n    )\n    \n\n}\n\nexport default AuthForm;","import { authService, firebaseInstance } from 'fbase';\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    \n    const onSocialClick = async (event) => {\n        const {\n            target:{name}\n        } = event;\n        let provider;\n        if(name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n    }\n    \n    return (\n        <div>\n            <AuthForm />\n            <div>\n                    <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\n                    <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Auth;","import { Link } from 'react-router-dom';\n\nconst Navigation = ({userObj}) => {\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                    <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\nexport default Navigation;","import {authService, dbService} from 'fbase';\nimport { useState , useEffect} from 'react';\n\nconst Profile = ({userObj, refreshUser}) => {\n    const onLogOutclick = () => authService.signOut();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    \n    \n    // const getMyNweets = async() => {\n    //     const nweets = await dbService\n    //                             .collection('nweets')\n    //                             .where('creatorId', '==', userObj.uid)\n    //                             .orderBy('createdAt', \"asc\")\n    //                             .get();\n    //     console.log(nweets.docs.map((doc) => doc.data()));\n    // }\n    \n    // useEffect( () => {\n    //     getMyNweets();\n    // }, []);\n\n    const onChange = (event) => {\n        const {\n            target: {\n                value\n            }\n        } = event;\n        setNewDisplayName(value);\n    }\n    \n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({displayName: newDisplayName});\n            refreshUser();\n        } \n    } \n    \n    \n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input onChange={onChange} type=\"text\" placeholder=\"Display Name\" value={newDisplayName}/>\n                <input type=\"submit\" value=\"Update Profile\"  />\n            </form>\n            <button onClick={onLogOutclick}>Log Out</button>\n        </>\n    )\n}\n\nexport default Profile;","import { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Home from 'routes/Home';\nimport Auth from 'components/Auth';\nimport Navigation from 'components/Navigation';\nimport Profile from 'components/Profile';\n\nconst AppRouter = ( {isLoggedIn, userObj, refreshUser} ) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n               { isLoggedIn ? (\n                   <>\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj}/>\n                        </Route>\n                        <Route exact path=\"/profile\"> \n                            <Profile userObj={userObj} refreshUser={refreshUser}/>\n                        </Route>\n                    </>    \n                ) : (\n                    <Route exact path=\"/\">\n                        <Auth />\n                    </Route>\n                )}\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter;","import { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport {authService} from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [ userObj, setUserObj] = useState(null);\n  \n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args)\n    });\n  };\n  \n  useEffect( () => {\n    authService.onAuthStateChanged( (user) => {\n      if(user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  },[]);\n  return (\n    <>\n      {init ? ( <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} /> ) \n        : ( \n            \"initializing...\" \n          )}\n      <footer>&copy; {new Date().getFullYear()} Nwitter </footer>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport firebase from './fbase';\n\n// console.log(firebase);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}